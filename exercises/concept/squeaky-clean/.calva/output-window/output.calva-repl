; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Babashka" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\concept\squeaky-clean & bb --nrepl-server 53108 & popd
; Using host:port 127.0.0.1:53108 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉user꞉>  ; Use `alt+enter` to evaluate
clj꞉user꞉> 
; Jack-in done.
clj꞉user꞉> 
; Evaluating file: squeaky_clean_test.clj
; java.lang.Exception: Could not find namespace: squeaky-clean. squeaky-clean-test /C:/Users/porko/Documents/GitHub/exercism/clojure/exercises/concept/squeaky-clean/test/squeaky_clean_test.clj:2:3
; Evaluation of file squeaky_clean_test.clj failed: class java.lang.Exception
clj꞉squeaky-clean-test꞉> 
; Evaluating file: squeaky_clean.clj
#'squeaky-clean/clean
clj꞉squeaky-clean꞉> 
; Evaluating file: squeaky_clean_test.clj
#'squeaky-clean-test/combine-conversions
clj꞉squeaky-clean-test꞉> 
{:test 10, :pass 0, :fail 10, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
\r
clj꞉squeaky-clean꞉> 
114
clj꞉squeaky-clean꞉> 
; : Unknown character property name { } near index 4
; [^\p {L} _] | [α-ω]
;     ^ squeaky-clean 
clj꞉squeaky-clean꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
; Evaluating file: squeaky_clean.clj
#'squeaky-clean/clean
clj꞉squeaky-clean꞉> 
{:test 10, :pass 1, :fail 0, :error 9, :type :summary}
clj꞉squeaky-clean-test꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
{:test 10, :pass 1, :fail 9, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
{:test 10, :pass 1, :fail 9, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
false
clj꞉squeaky-clean꞉> 
true
clj꞉squeaky-clean꞉> 
; Evaluating file: squeaky_clean.clj
#'squeaky-clean/clean
clj꞉squeaky-clean꞉> 
; Evaluating file: squeaky_clean_test.clj
{:test 10, :pass 1, :fail 9, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
; java.lang.NoSuchFieldException: toUppercase squeaky-clean c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\concept\squeaky-clean\src\squeaky_clean.clj:1:1
clj꞉squeaky-clean꞉> 
; java.lang.NoSuchFieldException: toUppercase squeaky-clean c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\concept\squeaky-clean\src\squeaky_clean.clj:1:1
clj꞉squeaky-clean꞉> 
"B"
clj꞉squeaky-clean꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
{:test 10, :pass 10, :fail 0, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
; java.lang.UnsupportedOperationException: count not supported on this type: Character squeaky-clean c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\concept\squeaky-clean\src\squeaky_clean.clj:1:1
clj꞉squeaky-clean꞉> 
1
clj꞉squeaky-clean꞉> 
#'squeaky-clean/isLetter
clj꞉squeaky-clean꞉> 
{:test 10, :pass 10, :fail 0, :error 0, :type :summary}
clj꞉squeaky-clean-test꞉> 
; Evaluating file: acronym.clj
"CMOS"
clj꞉acronym꞉> 
; java.lang.IllegalArgumentException: Unexpected param type, expected: int, given: java.lang.String acronym c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\practice\acronym\src\acronym.clj:1:1
clj꞉acronym꞉> 
; java.lang.IllegalArgumentException: Unexpected param type, expected: int, given: java.lang.Character acronym c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\practice\acronym\src\acronym.clj:1:1
clj꞉acronym꞉> 
; java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Character acronym c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\practice\acronym\src\acronym.clj:1:25
clj꞉acronym꞉> 
true
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
32
clj꞉acronym꞉> 
; clojure.lang.ExceptionInfo: Could not resolve symbol: str/upper-case acronym c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\practice\acronym\src\acronym.clj:3:14
clj꞉acronym꞉> 
nil
clj꞉acronym꞉> 
#'acronym/isAlphabetic
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
101
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
101
clj꞉acronym꞉> 
\e
clj꞉acronym꞉> 
"E"
clj꞉acronym꞉> 
32
clj꞉acronym꞉> 
" "
clj꞉acronym꞉> 
#'acronym/isAlphabetic
clj꞉acronym꞉> 
false
clj꞉acronym꞉> 
true
clj꞉acronym꞉> 
; clojure.lang.ExceptionInfo: Could not resolve symbol: acronym date-parser c:\Users\porko\Documents\GitHub\exercism\clojure\exercises\practice\acronym\src\acronym.clj:1:1
clj꞉acronym꞉> 
; Evaluating file: acronym.clj
"CMOS"
clj꞉acronym꞉> 
"HTML"
clj꞉acronym꞉> 
